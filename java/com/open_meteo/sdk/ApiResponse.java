// automatically generated by the FlatBuffers compiler, do not modify

package com.open_meteo.sdk;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ApiResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static ApiResponse getRootAsApiResponse(ByteBuffer _bb) { return getRootAsApiResponse(_bb, new ApiResponse()); }
  public static ApiResponse getRootAsApiResponse(ByteBuffer _bb, ApiResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ApiResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float latitude() { int o = __offset(4); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float longitude() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float elevation() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float generationTimeMilliseconds() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long locationId() { int o = __offset(12); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public int model() { int o = __offset(14); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int utcOffsetSeconds() { int o = __offset(16); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String timezone() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer timezoneAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer timezoneInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  public String timezoneAbbreviation() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer timezoneAbbreviationAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer timezoneAbbreviationInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  public com.open_meteo.sdk.SeriesAndTime current() { return current(new com.open_meteo.sdk.SeriesAndTime()); }
  public com.open_meteo.sdk.SeriesAndTime current(com.open_meteo.sdk.SeriesAndTime obj) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public com.open_meteo.sdk.SeriesAndTime daily() { return daily(new com.open_meteo.sdk.SeriesAndTime()); }
  public com.open_meteo.sdk.SeriesAndTime daily(com.open_meteo.sdk.SeriesAndTime obj) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public com.open_meteo.sdk.SeriesAndTime hourly() { return hourly(new com.open_meteo.sdk.SeriesAndTime()); }
  public com.open_meteo.sdk.SeriesAndTime hourly(com.open_meteo.sdk.SeriesAndTime obj) { int o = __offset(26); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public com.open_meteo.sdk.SeriesAndTime minutely15() { return minutely15(new com.open_meteo.sdk.SeriesAndTime()); }
  public com.open_meteo.sdk.SeriesAndTime minutely15(com.open_meteo.sdk.SeriesAndTime obj) { int o = __offset(28); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public com.open_meteo.sdk.SeriesAndTime sixHourly() { return sixHourly(new com.open_meteo.sdk.SeriesAndTime()); }
  public com.open_meteo.sdk.SeriesAndTime sixHourly(com.open_meteo.sdk.SeriesAndTime obj) { int o = __offset(30); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createApiResponse(FlatBufferBuilder builder,
      float latitude,
      float longitude,
      float elevation,
      float generationTimeMilliseconds,
      long locationId,
      int model,
      int utcOffsetSeconds,
      int timezoneOffset,
      int timezoneAbbreviationOffset,
      int currentOffset,
      int dailyOffset,
      int hourlyOffset,
      int minutely15Offset,
      int sixHourlyOffset) {
    builder.startTable(14);
    ApiResponse.addLocationId(builder, locationId);
    ApiResponse.addSixHourly(builder, sixHourlyOffset);
    ApiResponse.addMinutely15(builder, minutely15Offset);
    ApiResponse.addHourly(builder, hourlyOffset);
    ApiResponse.addDaily(builder, dailyOffset);
    ApiResponse.addCurrent(builder, currentOffset);
    ApiResponse.addTimezoneAbbreviation(builder, timezoneAbbreviationOffset);
    ApiResponse.addTimezone(builder, timezoneOffset);
    ApiResponse.addUtcOffsetSeconds(builder, utcOffsetSeconds);
    ApiResponse.addGenerationTimeMilliseconds(builder, generationTimeMilliseconds);
    ApiResponse.addElevation(builder, elevation);
    ApiResponse.addLongitude(builder, longitude);
    ApiResponse.addLatitude(builder, latitude);
    ApiResponse.addModel(builder, model);
    return ApiResponse.endApiResponse(builder);
  }

  public static void startApiResponse(FlatBufferBuilder builder) { builder.startTable(14); }
  public static void addLatitude(FlatBufferBuilder builder, float latitude) { builder.addFloat(0, latitude, 0.0f); }
  public static void addLongitude(FlatBufferBuilder builder, float longitude) { builder.addFloat(1, longitude, 0.0f); }
  public static void addElevation(FlatBufferBuilder builder, float elevation) { builder.addFloat(2, elevation, 0.0f); }
  public static void addGenerationTimeMilliseconds(FlatBufferBuilder builder, float generationTimeMilliseconds) { builder.addFloat(3, generationTimeMilliseconds, 0.0f); }
  public static void addLocationId(FlatBufferBuilder builder, long locationId) { builder.addLong(4, locationId, 0L); }
  public static void addModel(FlatBufferBuilder builder, int model) { builder.addByte(5, (byte) model, (byte) 0); }
  public static void addUtcOffsetSeconds(FlatBufferBuilder builder, int utcOffsetSeconds) { builder.addInt(6, utcOffsetSeconds, 0); }
  public static void addTimezone(FlatBufferBuilder builder, int timezoneOffset) { builder.addOffset(7, timezoneOffset, 0); }
  public static void addTimezoneAbbreviation(FlatBufferBuilder builder, int timezoneAbbreviationOffset) { builder.addOffset(8, timezoneAbbreviationOffset, 0); }
  public static void addCurrent(FlatBufferBuilder builder, int currentOffset) { builder.addOffset(9, currentOffset, 0); }
  public static void addDaily(FlatBufferBuilder builder, int dailyOffset) { builder.addOffset(10, dailyOffset, 0); }
  public static void addHourly(FlatBufferBuilder builder, int hourlyOffset) { builder.addOffset(11, hourlyOffset, 0); }
  public static void addMinutely15(FlatBufferBuilder builder, int minutely15Offset) { builder.addOffset(12, minutely15Offset, 0); }
  public static void addSixHourly(FlatBufferBuilder builder, int sixHourlyOffset) { builder.addOffset(13, sixHourlyOffset, 0); }
  public static int endApiResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishApiResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedApiResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ApiResponse get(int j) { return get(new ApiResponse(), j); }
    public ApiResponse get(ApiResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

